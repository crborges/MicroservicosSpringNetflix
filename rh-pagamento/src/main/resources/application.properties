logging.file.name=rh_pagamento_server.log
spring.jpa.show-sql=true
spring.application.name=rh-pagamento
#essas 2 lnhas configuram que este micro servico rode diversas instancias em portas aleatorias
server.port=${PORT:0}
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#configura quem é o servidor eureka que o trabalhador vai se registrar
eureka.client.service-url.defaultZone=http://localhost:8761/eureka


#Configuracao do tempo de timeout que o ribbon e o hystrix tem que esperar para dar erro na chamando do serviço de  trabalhador
#pela documentacao o timeout do histryx tem que ser maior que o do ribbon
#Timeout histrix de 60 mil milisegundos ou seja de 1 minuto
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000
#tempo de timeout de conexao do ribbon 10 segundos
ribbon.ConnectTimeout=10000
#tempo de timeout de leitura do ribbon de 20 segundos
ribbon.ReadTimeout=20000